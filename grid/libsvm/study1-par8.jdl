[

# CODE-RADE libsvm Study 1 - see README.md
# This

  Type = "Job";
  JobType = "Normal";
  CPUNumber = 8;
  SMPGranularity = 8;
#  WholeNodes=true;

# Command to execute on the worker node
# In this case, it is a script provided by us, which has to be included in the
# Input Sandbox (see below)

  Executable = "study1-par.sh";
# Standard output (Would have been displayed to the screen output)

  StdOutput = "rbf.out";

# Standard errors - we merge this with stdout

  StdError = "rbf.out";

# Files to save after a jobrun (logfiles, outputfiles, etc.)

OutputSandbox = {"rbf.out"};

#  These are long-running jobs - we want to see what they are doing.
# see : http://wiki.grid.auth.gr/wiki/bin/view/Groups/ALL/MonitoringTheOutputOfYourJob
PerusalFileEnable = true;
# Set updates every 3 minutes
PerusalTimeInterval = 180;

InputSandbox = {"study1-par.sh",
                "grid-parallel.py",
                "text_normalization.pl"
               };

#  See http://doc.grid.surfsara.nl/en/latest/Pages/Practices/data_replication.html?highlight=inputdata#data-requirements
DataRequirements = {
                     [
                       InputData = {"lfn:/grid/sagrid/nwu-hlt/NCHLT/NCHLT_2K.tar.gz"};
                       DataCatalogType = "DLI";
                       DataCatalog = "http://lfc.magrid.ma:8085";
                      ]
                    };
DataAccessProtocol = {"gsiftp"};
DataAccessProtocol = "gsiftp";

Requirements = other.GlueCEUniqueID=="glite-ce.grid.uj.ac.za:8443/cream-pbs-sagrid";

# Number of times to resubmit job, if first submit fails from WMS
RetryCount = 2;

# Number of times to resubmit the job, if the first submit fails from the local queue

ShallowRetryCount = 2;
]
