[

# CODE-RADE libsvm Study 1 - see README.md
# This

  Type = "Job";
  JobType = "Normal";

# Command to execute on the worker node
# In this case, it is a script provided by us, which has to be included in the
# Input Sandbox (see below)

  Executable = "run_libsvm_rbf_glibrary.sh";
  Arguments = "fastrepo '12K' 1 1 1 1";

# Standard output (Would have been displayed to the screen output)
  StdOutput = "rbf.out";

# Standard errors - we merge this with stdout
  StdError = "rbf.out";

InputSandbox = {"run_libsvm_rbf_glibrary.sh",
                "grid.py",
                "text_normalization.pl"
               };

OutputSandbox = {"rbf.out"};
OutputSandboxBaseDestURI = "gsiftp://grid-ce.chpc.ac.za//tmp/";

#  See http://doc.grid.surfsara.nl/en/latest/Pages/Practices/data_replication.html?highlight=inputdata#data-requirements
DataRequirements = {
                     [
                       InputData = {"lfn:/grid/sagrid/nwu-hlt/NCHLT/NCHLT_12K.tar.gz"};
                       DataCatalogType = "DLI";
                       DataCatalog = "http://lfc.magrid.ma:8085";
                      ]
                    };
DataAccessProtocol = {"gsiftp"};
DataAccessProtocol = "gsiftp";

Requirements = other.GlueCEUniqueID=="grid-ce.chpc.ac.za:8443/cream-pbs-sagrid";

# Number of times to resubmit job, if first submit fails from WMS
RetryCount = 2;

# Number of times to resubmit the job, if the first submit fails from the local queue

ShallowRetryCount = 2;
]
